*&---------------------------------------------------------------------*
*&  Include           ZMM_MALZEME_YARAT_GENEL_F01
*&---------------------------------------------------------------------*
FORM f4_filename .
  DATA: l_filename LIKE  ibipparms-path.

  CALL FUNCTION 'KD_GET_FILENAME_ON_F4'
  EXPORTING
    STATIC    = 'X'
  CHANGING
    file_name = p_file.

*  PERFORM convert_xls_to_sap USING l_filename.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CONVERT_XLS_TO_SAP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM convert_xls_to_sap.
  DATA: lt_type   TYPE truxs_t_text_data.

  CALL FUNCTION 'TEXT_CONVERT_XLS_TO_SAP'
  EXPORTING
    i_tab_raw_data = lt_type
    i_filename     = p_file
  TABLES
    i_tab_converted_data = gt_excel[]
  EXCEPTIONS
    conversion_failed = 1
    OTHERS              = 2.

  DELETE gt_excel INDEX 1.
  BREAK tamer.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MAT_CREATE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM MAT_CREATE .
data: lv_satir TYPE i.
data: MATNR_TAB LIKE  PRE03 OCCURS 0 WITH HEADER LINE.
data: lv_matnr TYPE matnr.
data: lv_num TYPE i.

DATA: lv_str TYPE char18.
DATA: lv_str2 TYPE string.
DATA: subset TYPE string.
DATA: offset TYPE I.
DATA: len TYPE I.

data: mat TYPE string.


  LOOP AT GT_EXCEL INTO RECORD.
    CLEAR: HEADDATA,
           CLIENTDATA,
           CLIENTDATAX,
           PLANTDATA,
           PLANTDATAX,
           STORAGELOCATIONDATA,
           STORAGELOCATIONDATAX,
           VALUATIONDATA,
           VALUATIONDATAX,
           SALESDATA,
           SALESDATAX,
           TB_RETURN,
           TB_MATERIALDESCRIPTION,
           TB_MATERIALDESCRIPTION[],
           UNITSOFMEASURE[],
           UNITSOFMEASURE,
           UNITSOFMEASUREX,
           UNITSOFMEASUREX[],
           TAXCLASSIFICATIONS,
           TAXCLASSIFICATIONS[],
           RETURNMESSAGES,
           RETURNMESSAGES[].

    LV_SATIR = LV_SATIR + 1.

    LV_NUM = STRLEN( RECORD-MATNR ).

    IF LV_NUM GT 18.
      CONCATENATE RECORD-MATNR ' Nolu malzeme 18 karakterden uzun' INTO TB_RETURN-MESSAGE.
      WRITE: / TB_RETURN-MESSAGE COLOR COL_NEGATIVE.
      CONTINUE.
    ENDIF.


*    LV_STR = RECORD-MATNR.

*    OFFSET = 17.
*    DO 18 TIMES.
*      SUBSET = LV_STR+OFFSET(1).
*      IF SUBSET EQ ' '.
*        CLEAR LV_STR2.
*        LV_STR2 = LV_STR+0(OFFSET).
*      ELSE.
*        EXIT.
*      ENDIF.
*      OFFSET = OFFSET - 1.
*    ENDDO.
*
*    RECORD-MATNR = LV_STR2.


    LEN = STRLEN( RECORD-MATNR ).

    DATA: X.
    DATA: Y TYPE I.
    DATA: Z TYPE I.
    DATA: conv      TYPE REF TO cl_abap_conv_out_ce,
          l_data        TYPE string,
          l_buffer      TYPE xstring.

  conv = cl_abap_conv_out_ce=>create( encoding = 'UTF-8'
                                      endian   = 'L'
                                      ignore_cerr = 'X'
                                      replacement = '#' ).


    IF R_YP EQ 'X'.
      DO LEN TIMES..
        CONCATENATE RECORD-MATNR '*' INTO RECORD-MATNR.
        Z = LEN - 1.
        L_data = RECORD-MATNR+Z(2).
        CALL METHOD conv->write( data = l_data ).
        l_buffer = conv->get_buffer( ).
        IF l_buffer EQ 'C2A02A'.
          Y = LEN - 1.
          RECORD-MATNR = RECORD-MATNR+0(Y).
        ELSE.
*          y = len - 1.
*          RECORD-MATNR = RECORD-MATNR+0(Y).
          EXIT.
        ENDIF.
      ENDDO.

      FIND FIRST OCCURRENCE OF '*' IN RECORD-MATNR MATCH OFFSET Z.
      record-matnr = record-matnr+0(z).
    ENDIF.

    HEADDATA-MATERIAL   = RECORD-MATNR.
    HEADDATA-IND_SECTOR = RECORD-MBRSH.
    HEADDATA-MATL_TYPE  = RECORD-MTART.

    HEADDATA-BASIC_VIEW       = 'X'.

    IF RECORD-WERKS NE 'SZ07'.
      HEADDATA-SALES_VIEW       = 'X'.
    ENDIF.

    HEADDATA-PURCHASE_VIEW    = 'X'.
    HEADDATA-INP_FLD_CHECK    = 'W'.
*    HEADDATA-MRP_VIEW         = 'X'.
    HEADDATA-FORECAST_VIEW    = 'X'.
    HEADDATA-WORK_SCHED_VIEW  = 'X'.
    HEADDATA-PRT_VIEW         = 'X'.
    HEADDATA-STORAGE_VIEW     = 'X'.
    HEADDATA-WAREHOUSE_VIEW   = 'X'.
    HEADDATA-QUALITY_VIEW     = 'X'.
    HEADDATA-ACCOUNT_VIEW     = 'X'.
*    HEADDATA-COST_VIEW        = 'X'.



    CALL FUNCTION 'CONVERSION_EXIT_CUNIT_INPUT'
    EXPORTING
      INPUT                = RECORD-MEINS
    IMPORTING
      OUTPUT               = RECORD-MEINS.





    CLIENTDATA-MATL_GROUP = RECORD-MATKL. " MAL GRUBU
    CLIENTDATA-BASE_UOM = RECORD-MEINS.   " TEMEL ÖLÇÜ BIRIMI
    CLIENTDATA-DIVISION = RECORD-SPART.   " BÖLÜM
    CLIENTDATA-PROD_HIER = RECORD-PRDHA.  " HIYERARŞI
    CLIENTDATA-TRANS_GRP = RECORD-TRAGR.  " NAKIL GRUBU
    CLIENTDATA-STOR_CONDS    = RECORD-RAUBE. " DEPOLAMA KOŞULU
*    CLIENTDATA-PERIOD_IND_EXPIRATION_DATE = RECORD-IPRKZ." SKT IÇIN DÖNEM GÖSTERGESI
    CLIENTDATA-EXTMATLGRP = RECORD-EXTWG. " Harici Mal Grubu


    CALL FUNCTION 'CONVERSION_EXIT_CUNIT_INPUT'
      EXPORTING
        INPUT                = RECORD-GEWEI
      IMPORTING
        OUTPUT               = RECORD-GEWEI.


    CALL FUNCTION 'CONVERSION_EXIT_CUNIT_INPUT'
      EXPORTING
        INPUT                = record-VOLEH
      IMPORTING
        OUTPUT               = record-VOLEH.


    CLIENTDATA-NET_WEIGHT = RECORD-NTGEW. " NET AĞıRLıK
    CLIENTDATA-UNIT_OF_WT = RECORD-GEWEI.
    CLIENTDATA-ALLWD_VOL =  record-VOLUM.
    CLIENTDATA-PACK_VO_UN = record-VOLEH.
    CLIENTDATA-OLD_MAT_NO = RECORD-BISMT.
    CLIENTDATA-ITEM_CAT   = RECORD-MTPOS.

*    CLIENTDATA-MANU_MAT = MA. " " ÜRETICI PARÇA NUMARAı
*    CLIENTDATA-MFR_NO = MARA-MFRNR.   " ÜRETICI NUMARASı

    CLIENTDATAX-MATL_GROUP = 'X'.
    CLIENTDATAX-BASE_UOM   = 'X'.
    CLIENTDATAX-DIVISION   = 'X'.
    CLIENTDATAX-PROD_HIER  = 'X'.
    CLIENTDATAX-NET_WEIGHT = 'X'.
    CLIENTDATAX-TRANS_GRP  = 'X'.
    CLIENTDATAX-STOR_CONDS = 'X'.
    CLIENTDATAX-UNIT_OF_WT = 'X'.
    CLIENTDATAX-ALLWD_VOL  = 'X'.
    CLIENTDATAX-OLD_MAT_NO = 'X'.
    CLIENTDATAX-PACK_VO_UN = 'X'.
    CLIENTDATAX-ITEM_CAT   = 'X'.
    CLIENTDATAX-PERIOD_IND_EXPIRATION_DATE = 'X'.
*    CLIENTDATAX-MANU_MAT = 'X'.
*    CLIENTDATAX-MFR_NO = 'X'.
    CLIENTDATAX-EXTMATLGRP = 'X'.


    PLANTDATA-PLANT      = RECORD-WERKS. " ÜRETIM YERI
*    PLANTDATA-MRP_TYPE      = 'ND'. " MıP
    PLANTDATA-PUR_GROUP  = RECORD-EKGRP. " SATıNALMA GRUBU
*   PLANTDATA-BATCH_MGMT = VI_BATCH. " YEDEK PARÇA IÇIN GEREKSIZ
    PLANTDATA-AVAILCHECK = RECORD-MTVFP.
    PLANTDATA-COMM_CODE  = RECORD-STAWN.
    PLANTDATA-PROFIT_CTR = RECORD-PRCTR. " KAR MERKEZI
    PLANTDATA-LOADINGGRP = RECORD-LADGR. " YÜK GRUBU

    PLANTDATAX-PLANT = RECORD-WERKS.
    PLANTDATAX-PUR_GROUP  = 'X'.
    PLANTDATAX-MRP_TYPE   = 'X'.
*    PLANTDATAX-BATCH_MGMT = 'X'.
    PLANTDATAX-AVAILCHECK = 'X'.
    PLANTDATAX-COMM_CODE  = 'X'.
    PLANTDATAX-AVAILCHECK = 'X'.
    PLANTDATAX-PROFIT_CTR = 'X'.
    PLANTDATAX-LOADINGGRP = 'X'.


    IF RECORD-WERKS NE 'SZ07'.
      SALESDATA-SALES_ORG  = RECORD-VKORG. " SATıŞ ORG
      SALESDATA-DISTR_CHAN = RECORD-VTWEG. " DAĞıTıM KANALı
      SALESDATA-DELYG_PLNT = RECORD-DWERK. " TESLIMATı YAPAN ÜRETIM YERI
      SALESDATA-MATL_STATS = RECORD-VERSG. " MALZEME İSTATISTIK GRUBU
      SALESDATA-ACCT_ASSGT = RECORD-KTGRM. " HESAP TAYIN GRUBU
      SALESDATA-ITEM_CAT   = RECORD-MTPOS.   " MALZEME ANA VERILERINDEN KALEM TIPI GRUBU
*   SALESDATA-SALES_UNIT = RECORD-MEINS.      " SATıŞ ÖLÇÜ BIRIMI
      SALESDATA-CASH_DISC  = RECORD-SKTOF . " NAKIT INDIRIMI YAPıLABILIR
      SALESDATA-MAT_PR_GRP = RECORD-KONDM . " MALZEME GRUBU

      SALESDATAX-SALES_ORG  = RECORD-VKORG.
      SALESDATAX-DISTR_CHAN = RECORD-VTWEG.
      SALESDATAX-DELYG_PLNT = 'X'.
      SALESDATAX-MATL_STATS = 'X'.
      SALESDATAX-ACCT_ASSGT = 'X'.
      SALESDATAX-ITEM_CAT = 'X'.
*    SALESDATAX-SALES_UNIT = 'X'.
      SALESDATAX-CASH_DISC = 'X'.
      SALESDATAX-MAT_PR_GRP = 'X'.

    ENDIF.

    STORAGELOCATIONDATA-PLANT    = RECORD-WERKS.
    STORAGELOCATIONDATA-STGE_LOC = RECORD-LGORT.
    STORAGELOCATIONDATA-STGE_BIN = RECORD-LGPBE.

    STORAGELOCATIONDATAX-PLANT    = RECORD-WERKS.
    STORAGELOCATIONDATAX-STGE_LOC = RECORD-LGORT.
    STORAGELOCATIONDATAX-STGE_BIN = 'X'.


    TAXCLASSIFICATIONS-DEPCOUNTRY = 'TR'.
    TAXCLASSIFICATIONS-TAX_TYPE_1 = 'MWST'.
    TAXCLASSIFICATIONS-TAXCLASS_1 = RECORD-TAXKM_01.
    APPEND TAXCLASSIFICATIONS.
    CLEAR TAXCLASSIFICATIONS.

    TAXCLASSIFICATIONS-DEPCOUNTRY = 'TR'.
    TAXCLASSIFICATIONS-TAX_TYPE_1 = 'ZHRD'.
    TAXCLASSIFICATIONS-TAXCLASS_1 = RECORD-TAXKM_02.
    APPEND TAXCLASSIFICATIONS.
    CLEAR TAXCLASSIFICATIONS.

    TAXCLASSIFICATIONS-DEPCOUNTRY = 'TR'.
    TAXCLASSIFICATIONS-TAX_TYPE_1 = 'ZWIA'.
    TAXCLASSIFICATIONS-TAXCLASS_1 = RECORD-TAXKM_03.
    APPEND TAXCLASSIFICATIONS.
    CLEAR TAXCLASSIFICATIONS.

    TAXCLASSIFICATIONS-DEPCOUNTRY = 'TR'.
    TAXCLASSIFICATIONS-TAX_TYPE_1 = 'ZWOT'.
    TAXCLASSIFICATIONS-TAXCLASS_1 = RECORD-TAXKM_04.
    APPEND TAXCLASSIFICATIONS.
    CLEAR TAXCLASSIFICATIONS.

    TAXCLASSIFICATIONS-DEPCOUNTRY = 'TR'.
    TAXCLASSIFICATIONS-TAX_TYPE_1 = 'ZOIV'.
    TAXCLASSIFICATIONS-TAXCLASS_1 = RECORD-TAXKM_05.
    APPEND TAXCLASSIFICATIONS.
    CLEAR  TAXCLASSIFICATIONS.


    SELECT SINGLE BWKEY
      FROM T001W
      INTO record-BWKEY
      WHERE WERKS eq record-WERKS.

    VALUATIONDATA-VAL_CLASS = RECORD-BKLAS. " DEĞERLEME SıNıFı
    VALUATIONDATA-VAL_AREA = RECORD-BWKEY.
    VALUATIONDATA-VAL_TYPE = ''.
    VALUATIONDATA-ML_ACTIVE = 'X'.

    IF RECORD-STPRS IS NOT INITIAL.
      REPLACE ALL OCCURRENCES OF ',' IN RECORD-STPRS WITH '.'.
      VALUATIONDATA-STD_PRICE = RECORD-STPRS.
      VALUATIONDATAX-STD_PRICE = 'X'.
    ENDIF.

    VALUATIONDATA-ML_SETTLE  = RECORD-MLAST.
    VALUATIONDATA-PRICE_CTRL = RECORD-VPRSV.

*    VALUATIONDATA-MOVING_PR = VI_VERPR. "
    VALUATIONDATAX-VAL_AREA = RECORD-BWKEY.
    VALUATIONDATAX-VAL_TYPE = ''.
    VALUATIONDATAX-VAL_CLASS = 'X'.
    VALUATIONDATAX-ML_ACTIVE = 'X'.
    VALUATIONDATAX-ML_SETTLE =  'X'.
    VALUATIONDATAX-PRICE_CTRL = 'X'.

*    VALUATIONDATAX-MOVING_PR = 'X'.

    IF r_ma EQ 'X'.
      CLIENTDATA-BATCH_MGMT  = RECORD-XCHPF.
      CLIENTDATAX-BATCH_MGMT = 'X'.
      PLANTDATA-BATCH_MGMT = 'X'.
      PLANTDATAX-BATCH_MGMT = 'X'.
*      VALUATIONDATA-QTY_STRUCT = RECORD-EKALR.
*      VALUATIONDATAX-QTY_STRUCT = 'X'.
      VALUATIONDATA-VAL_CAT = RECORD-BWTTY.
      VALUATIONDATAX-VAL_CAT = 'X'.
*      PLANTDATA-LOT_SIZE = RECORD-LOSGR.
*      PLANTDATAX-LOT_SIZE = 'X'.
*      VALUATIONDATA-VAL_CAT = RECORD-BWTTY.
*      VALUATIONDATAX-VAL_CAT = 'X'.
    ENDIF.

    FREE: TB_MATERIALDESCRIPTION.
    CLEAR: TB_MATERIALDESCRIPTION.
    TB_MATERIALDESCRIPTION-LANGU = 'T'.
    TB_MATERIALDESCRIPTION-MATL_DESC = RECORD-MAKTX. "TANıM
    APPEND TB_MATERIALDESCRIPTION.
    CLEAR: TB_MATERIALDESCRIPTION.
    TB_MATERIALDESCRIPTION-LANGU = 'E'.
    TB_MATERIALDESCRIPTION-MATL_DESC = RECORD-MAKTX. "TANıM
    APPEND TB_MATERIALDESCRIPTION.

    CLEAR UNITSOFMEASURE.
    CLEAR UNITSOFMEASUREX.

    UNITSOFMEASURE-UNIT_OF_WT   = record-GEWEI.
    UNITSOFMEASURE-ALT_UNIT     = record-MEINS.
    UNITSOFMEASURE-GROSS_WT     = record-BRGEW. " Brüt Ağırlık
    UNITSOFMEASURE-UNIT_OF_WT   = record-GEWEI. " Ölçü Birimi
    UNITSOFMEASURE-VOLUME       = record-VOLUM. " Hacim
    UNITSOFMEASURE-VOLUMEUNIT   = record-VOLEH. " hacim ölçü birimi.

    UNITSOFMEASUREX-UNIT_OF_WT  = 'X'.
    UNITSOFMEASUREX-ALT_UNIT    = RECORD-MEINS.
    UNITSOFMEASUREX-GROSS_WT    = 'X'. " BRÜT AĞıRLıK
    UNITSOFMEASUREX-UNIT_OF_WT  = 'X'. " ÖLÇÜ BIRIMI
    UNITSOFMEASUREX-VOLUME      = 'X'. " HACIM
    UNITSOFMEASUREX-VOLUMEUNIT  = 'X'. " HACIM ÖLÇÜ BIRIMI.
    APPEND UNITSOFMEASURE.
    APPEND UNITSOFMEASUREX.

    CALL FUNCTION 'BAPI_MATERIAL_SAVEDATA'
      EXPORTING
        HEADDATA                   = HEADDATA
        CLIENTDATA                 = CLIENTDATA
        CLIENTDATAX                = CLIENTDATAX
        PLANTDATA                  = PLANTDATA
        PLANTDATAX                 = PLANTDATAX
        STORAGELOCATIONDATA        = STORAGELOCATIONDATA
        STORAGELOCATIONDATAX       = STORAGELOCATIONDATAX
        VALUATIONDATA              = VALUATIONDATA
        VALUATIONDATAX             = VALUATIONDATAX
        SALESDATA                  = SALESDATA
        SALESDATAX                 = SALESDATAX
      IMPORTING
        RETURN                     = TB_RETURN
      TABLES
        MATERIALDESCRIPTION        = TB_MATERIALDESCRIPTION
        UNITSOFMEASURE             = UNITSOFMEASURE
        UNITSOFMEASUREX            = UNITSOFMEASUREX
        TAXCLASSIFICATIONS         = TAXCLASSIFICATIONS
        RETURNMESSAGES             = RETURNMESSAGES.

  IF TB_RETURN-TYPE EQ 'S'.
    WRITE: / TB_RETURN-MESSAGE COLOR COL_POSITIVE.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        WAIT          = 'X'.

*  IF R_MA EQ 'X'.
      MATNR_TAB-MATNR = TB_RETURN-MESSAGE_V1.
      APPEND MATNR_TAB.
      CLEAR MATNR_TAB.
*  ENDIF.

  ELSE.
    WRITE: / TB_RETURN-MESSAGE COLOR COL_NEGATIVE.
    CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.

  ENDIF.

  ENDLOOP.

*  IF R_MA EQ 'X'.
  " DENIZ MOTORU VE Otomobil için
  " sınıflandırma Tabı Açılıyor.
  CALL FUNCTION 'UPDATE_MATERIAL_CLASSIFICATION'
    TABLES
      MATNR_TAB       = MATNR_TAB.

  CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
    EXPORTING
      WAIT          = 'X'.

*  ENDIF.



ENDFORM.                    " MAT_CREATE
